set nocompatible

set regexpengine=1
set runtimepath^=~/dotfiles/vim
set packpath^=~/dotfiles/vim

set hidden

syntax on
set background=dark
set termguicolors
let base16colorspace=256
colorscheme tender
let g:airline_theme='tender'
hi Normal guibg=#282a36

" indent guides
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#373a4a ctermbg=235
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd guibg=#2f3240 ctermbg=234

" cursorline only for active window
augroup CursorLine
  au!
  au VimEnter,WinEnter,BufWinEnter * setlocal cursorline
  au WinLeave * setlocal nocursorline
augroup END

hi CursorLine guibg=#13141a
autocmd InsertEnter * highlight CursorLine guibg=#040405
autocmd InsertLeave * highlight CursorLine guibg=#13141a ctermbg=235

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
filetype on
filetype plugin on
filetype indent on
set smartindent
set autoindent
set nowrap
set hlsearch
set number
highlight LineNr ctermfg=darkgrey
set showmatch
set ignorecase
set smartcase
set smarttab
set autoread " auto refresh files when changes are made outside of vim

set laststatus=2

" delete all trailing space on save
autocmd BufWritePre * :%s/\s\+$//e

set mouse=a " enables the mouse
set history=1000 " more undo'ing
set incsearch " incrementally search/highlight as you're typing
set scrolloff=5 " start scrolling when the cursor is five lines away from the edge of screen

let g:jsx_ext_required = 0
let g:netrw_banner=0

" better split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap <C-T> :Files<CR>
nnoremap <C-P> :Files<CR>
nnoremap ; :Buffers<CR>
nnoremap ' :Tags<Enter>
nnoremap , :BTags<Enter>

" better split opening
set splitbelow
set splitright

" show invisibles
set listchars=eol:¬,tab:>·,extends:>,precedes:<
set list
hi NonText ctermfg=16
hi SpecialKey ctermfg=16

function! AirlineInit()
  let g:airline_section_y = ""
  let g:airline_section_x = ""
  let g:airline_section_z = g:airline_section_b
  let g:airline_section_b = ""
endfunction

autocmd User AirlineAfterInit call AirlineInit()

set tags=.tags;
let g:fzf_tags_command = "ctags -R --exclude=.git --exclude=node_modules --exclude=vendor -f .tags"

set backspace=indent,eol,start

set guioptions=
set guifont=Monaco:h10

let NERDTreeMinimalUI = 1
nnoremap <C-g> :NERDTreeToggle<Enter>
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'

set rtp+=/usr/local/opt/fzf

if !has("nvim") && !has("gui_running")

  " set the cursor to a vertical line in insert mode and a solid block
  " in command mode
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"

  " upon hitting escape to change modes,
  " send successive move-left and move-right
  " commands to immediately redraw the cursor
  inoremap <special> <Esc> <Esc>hl

  " don't blink the cursor
  set guicursor+=i:blinkwait0

endif

" Needed for tmux and vim to play nice
nnoremap <silent> <ESC>OA <UP>
nnoremap <silent> <ESC>OB <DOWN>
nnoremap <silent> <ESC>OC <RIGHT>
nnoremap <silent> <ESC>OD <LEFT>
inoremap <silent> <ESC>OA <UP>
inoremap <silent> <ESC>OB <DOWN>
inoremap <silent> <ESC>OC <RIGHT>
inoremap <silent> <ESC>OD <LEFT>

set timeoutlen=50
set ttimeout
set ttimeoutlen=50

highlight link xmlEndTag xmlTag

let g:ackprg = 'rg --vimgrep'

let g:ale_linters = {
\  'ruby': ['rubocop']
\}

" keep selection when changing indentation
vnoremap < <gv
vnoremap > >gv

" alt + j/k to move lines down/up
nnoremap ∆ :m .+1<CR>==
nnoremap ˚ :m .-2<CR>==
inoremap ∆ <Esc>:m .+1<CR>==gi
inoremap ˚ <Esc>:m .-2<CR>==gi
vnoremap ∆ :m '>+1<CR>gv=gv
vnoremap ˚ :m '<-2<CR>gv=gv
