set nocompatible

set regexpengine=1
set runtimepath^=~/dotfiles/vim
set packpath^=~/dotfiles/vim

set clipboard=unnamed

set hidden

set t_Co=256
set background=dark

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
filetype on
filetype plugin on
filetype indent on
syntax on
colorscheme base16-tomorrow-night
set smartindent
set autoindent
set nowrap
set hlsearch
set number
highlight LineNr ctermfg=darkgrey
set showmatch
set ignorecase
set smartcase
set smarttab
set autoread " auto refresh files when changes are made outside of vim

set laststatus=2
let g:airline_theme='tender'

" delete all trailing space on save
autocmd BufWritePre * :%s/\s\+$//e

set mouse=a " enables the mouse
set history=1000 " more undo'ing
set incsearch " incrementally search/highlight as you're typing
set scrolloff=5 " start scrolling when the cursor is five lines away from the edge of screen
set cursorline " highlight the entire line that your cursor is on

let g:jsx_ext_required = 0
let g:netrw_banner=0

" better split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap <C-T> :Files<CR>
nnoremap <C-P> :Files<CR>
nnoremap ; :Buffers<CR>
nnoremap ' :Tags<Enter>
nnoremap , :BTags<Enter>

" better split opening
set splitbelow
set splitright

" show invisibles
set listchars=eol:¬,tab:>·,extends:>,precedes:<
set list
hi NonText ctermfg=16
hi SpecialKey ctermfg=16

function! AirlineInit()
  let g:airline_section_y = ""
  let g:airline_section_x = ""
  let g:airline_section_z = g:airline_section_b
  let g:airline_section_b = ""
endfunction

autocmd User AirlineAfterInit call AirlineInit()

set tags=.tags;
let g:fzf_tags_command = "ctags -R --exclude=.git --exclude=node_modules --exclude=vendor -f .tags"

set backspace=indent,eol,start

set guioptions=
set guifont=Monaco:h10
set termguicolors

let NERDTreeMinimalUI = 1
nnoremap <C-g> :NERDTreeToggle<Enter>
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'

let g:diminactive_enable_focus = 1
let g:indentLine_char = '⎸'

set rtp+=/usr/local/opt/fzf

if !has("gui_running")

  " set the cursor to a vertical line in insert mode and a solid block
  " in command mode
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"

  " upon hitting escape to change modes,
  " send successive move-left and move-right
  " commands to immediately redraw the cursor
  inoremap <special> <Esc> <Esc>hl

  " don't blink the cursor
  set guicursor+=i:blinkwait0

endif

" Needed for tmux and vim to play nice
nnoremap <silent> <ESC>OA <UP>
nnoremap <silent> <ESC>OB <DOWN>
nnoremap <silent> <ESC>OC <RIGHT>
nnoremap <silent> <ESC>OD <LEFT>
inoremap <silent> <ESC>OA <UP>
inoremap <silent> <ESC>OB <DOWN>
inoremap <silent> <ESC>OC <RIGHT>
inoremap <silent> <ESC>OD <LEFT>

let g:ale_linters = {
\ 'ruby': []
\}

set ttimeout
set ttimeoutlen=50

highlight link xmlEndTag xmlTag
set ttymouse=sgr
